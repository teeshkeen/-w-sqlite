{"ast":null,"code":"var _jsxFileName = \"/Users/teeshkeen/clear/up-sqlite/frontend/src/pages/home/ui/catalog/ui/CatalogNav.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { categoryAPI } from '../../../../../shared/services/api';\nimport CatalogNavItem from '../../../../../features/catalog/ui/CatalogNavItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CatalogNav = ({\n  styles = ''\n}) => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate();\n  const handleCardClick = id => {\n    navigate(`/nomenclature/${id}`); // Переход на страницу nomenclature с id категории\n  };\n  useEffect(() => {\n    loadCategories();\n  }, []);\n  const loadCategories = async () => {\n    try {\n      const response = await categoryAPI.getCategories();\n      setCategories(response.data.categories);\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col bg-white p-5 rounded-lg min-w-64 shadow-lg ${styles}`,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleCardClick(category.id),\n        children: [/*#__PURE__*/_jsxDEV(CatalogNavItem, {\n          title: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), \" \"]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CatalogNav, \"WOa+Eqs3KURgzBioxIR9cjyV674=\", false, function () {\n  return [useNavigate];\n});\n_c = CatalogNav;\nexport default CatalogNav;\nvar _c;\n$RefreshReg$(_c, \"CatalogNav\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","categoryAPI","CatalogNavItem","jsxDEV","_jsxDEV","CatalogNav","styles","_s","categories","setCategories","navigate","handleCardClick","id","loadCategories","response","getCategories","data","error","console","className","children","map","category","onClick","title","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/teeshkeen/clear/up-sqlite/frontend/src/pages/home/ui/catalog/ui/CatalogNav.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { categoryAPI } from '../../../../../shared/services/api';\nimport CatalogNavItem from '../../../../../features/catalog/ui/CatalogNavItem';\nconst CatalogNav = ({styles = ''}) => {\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate()\n  const handleCardClick = (id) => {\n    navigate(`/nomenclature/${id}`); // Переход на страницу nomenclature с id категории\n  };\n\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const loadCategories = async () => {\n    try {\n      const response = await categoryAPI.getCategories();\n      setCategories(response.data.categories);\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  };\n\n  return (\n    <div className={`flex flex-col bg-white p-5 rounded-lg min-w-64 shadow-lg ${styles}`}>\n        <ul>\n            {categories.map(category => (\n            <li key={category.id} onClick={() => handleCardClick(category.id)}>\n              <CatalogNavItem title={category.name}/> {/* Pass category name and image to CatalogCard */}\n            </li>\n          ))}\n        </ul>\n    </div>\n  );\n};\n\nexport default CatalogNav;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,oCAAoC;AAChE,OAAOC,cAAc,MAAM,mDAAmD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/E,MAAMC,UAAU,GAAGA,CAAC;EAACC,MAAM,GAAG;AAAE,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,eAAe,GAAIC,EAAE,IAAK;IAC9BF,QAAQ,CAAC,iBAAiBE,EAAE,EAAE,CAAC,CAAC,CAAC;EACnC,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdc,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,WAAW,CAACc,aAAa,CAAC,CAAC;MAClDN,aAAa,CAACK,QAAQ,CAACE,IAAI,CAACR,UAAU,CAAC;IACzC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEb,OAAA;IAAKe,SAAS,EAAE,4DAA4Db,MAAM,EAAG;IAAAc,QAAA,eACjFhB,OAAA;MAAAgB,QAAA,EACKZ,UAAU,CAACa,GAAG,CAACC,QAAQ,iBACxBlB,OAAA;QAAsBmB,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAACW,QAAQ,CAACV,EAAE,CAAE;QAAAQ,QAAA,gBAChEhB,OAAA,CAACF,cAAc;UAACsB,KAAK,EAAEF,QAAQ,CAACG;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,KAAC;MAAA,GADjCP,QAAQ,CAACV,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtB,EAAA,CA/BIF,UAAU;EAAA,QAEGL,WAAW;AAAA;AAAA8B,EAAA,GAFxBzB,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}